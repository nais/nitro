name: Build nitro binaries
on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"

jobs:
  build:
    name: Build and release binaries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: create tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git tag -f $(cat .github/workflows/version)
          git push -f --tags

      - uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: code verification
        run: |
          make check && make test

      - name: create nitro binaries
        run: |
          make release-linux

      - name: delete release if exists
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          latest=$(curl https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest)
          tag=$(echo $latest | jq .tag_name | xargs) # xargs strips quotes
          if grep -q "$tag" .github/workflows/version; then
            release_id=$(echo $latest | jq .id)
            curl -X DELETE https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@api.github.com/repos/${GITHUB_REPOSITORY}/releases/${release_id}
          fi

      - name: create release
        env:
          BINARY: "nitro-linux"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release=$(curl -X POST \
            -d '{"tag_name": "'"$(cat .github/workflows/version)"'"}' \
            -H "Content-Type: application/json" \
            https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@api.github.com/repos/${GITHUB_REPOSITORY}/releases)
          curl -X POST \
          -H 'Content-Type: application/x-executable' \
          --data-binary @${BINARY} \
          https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/$(echo $release | jq .id)/assets?name=${BINARY}
